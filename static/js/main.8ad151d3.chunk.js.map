{"version":3,"sources":["Person.js","PeopleTable.js","App.js","index.js"],"names":["Person","_ref","person","selected","onSelected","classes","classnames","concat","century","Person--selected","Person--man","sex","Person--womam","Person--long-liver","age","react_default","a","createElement","className","onClick","id","Person_PersonName","born","died","mother","father","children","map","child","key","PersonName","_ref2","style","color","name","defaultProps","PeopleTable","state","selectedPersonId","_this2","this","_this$props","props","people","onSortFieldChanged","borderCollapse","src_Person","setState","React","Component","getPeople","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","normalizePeople","index","objectSpread","cenrury","Math","ceil","filter","preparedPeople","find","woman","motherName","man","fatherName","getSortedPeople","sortField","query","normalizedQuery","toLowerCase","includes","sort","personA","personB","valueA","valueB","localCompare","App","visiblePeople","setSortField","_this","handleQueryChange","event","target","value","_ref3","addPerson","_ref4","copiedPeople","toConsumableArray","normalizedPeople","_this$state","length","App_PersonForm","onSubmit","type","onChange","src_PeopleTable","PersonForm","handleSubmit","preventDefault","form","elements","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"wRAIMA,EAAS,SAAAC,GAAsC,IAAnCC,EAAmCD,EAAnCC,OAAQC,EAA2BF,EAA3BE,SAAUC,EAAiBH,EAAjBG,WAC5BC,EAAUC,IACd,SADwB,oBAAAC,OAEJL,EAAOM,SAC3B,CACEC,mBAAoBN,EACpBO,cAA8B,MAAfR,EAAOS,IACtBC,gBAAgC,MAAfV,EAAOS,IACxBE,qBAAsBX,EAAOY,KAAO,KAIxC,OACEC,EAAAC,EAAAC,cAAA,MACEC,UAAWb,EACXc,QAASf,GAETW,EAAAC,EAAAC,cAAA,UAAKf,EAAOkB,IACZL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACI,EAAD,CAAYnB,OAAQA,KAEtBa,EAAAC,EAAAC,cAAA,UAAKf,EAAOS,KACZI,EAAAC,EAAAC,cAAA,UAAKf,EAAOoB,MACZP,EAAAC,EAAAC,cAAA,UAAKf,EAAOqB,MACZR,EAAAC,EAAAC,cAAA,UAAKf,EAAOY,KACZC,EAAAC,EAAAC,cAAA,UAAKf,EAAOM,SACZO,EAAAC,EAAAC,cAAA,UACGf,EAAOsB,OACNT,EAAAC,EAAAC,cAACI,EAAD,CAAYnB,OAAQA,EAAOsB,SACzB,KAENT,EAAAC,EAAAC,cAAA,UACGf,EAAOuB,OACNV,EAAAC,EAAAC,cAACI,EAAD,CAAYnB,OAAQA,EAAOuB,SACzB,KAENV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACGf,EAAOwB,SAASC,IAAI,SAAAC,GAAK,OACxBb,EAAAC,EAAAC,cAAA,MAAIY,IAAKD,EAAMR,IACbL,EAAAC,EAAAC,cAACI,EAAD,CAAYnB,OAAQ0B,WAS5BE,EAAa,SAAAC,GAAgB,IAAb7B,EAAa6B,EAAb7B,OACd8B,EAAQ,CACZC,MAAuB,MAAf/B,EAAOS,IAAe,OAAS,OAGzC,OACEI,EAAAC,EAAAC,cAAA,KAAGe,MAAOA,GACP9B,EAAOgC,OA+BdlC,EAAOmC,aAAe,CACpBhC,UAAU,EACVC,WAAY,cAGCJ,QC5FToC,6MACJC,MAAQ,CACNC,iBAAkB,8EAGX,IAAAC,EAAAC,KAAAC,EACgCD,KAAKE,MAApCC,EADDF,EACCE,OAAQC,EADTH,EACSG,mBACRN,EAAqBE,KAAKH,MAA1BC,iBAER,OACEvB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAcc,MAAO,CAAEa,eAAgB,YACtD9B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,QAAS,kBAAMyB,EAAmB,QAAtC,MACA7B,EAAAC,EAAAC,cAAA,MAAIE,QAAS,kBAAMyB,EAAmB,UAAtC,QACA7B,EAAAC,EAAAC,cAAA,MAAIE,QAAS,kBAAMyB,EAAmB,SAAtC,OACA7B,EAAAC,EAAAC,cAAA,MAAIE,QAAS,kBAAMyB,EAAmB,UAAtC,QACA7B,EAAAC,EAAAC,cAAA,MAAIE,QAAS,kBAAMyB,EAAmB,UAAtC,QACA7B,EAAAC,EAAAC,cAAA,MAAIE,QAAS,kBAAMyB,EAAmB,SAAtC,OACA7B,EAAAC,EAAAC,cAAA,MAAIE,QAAS,kBAAMyB,EAAmB,aAAtC,WACA7B,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,wBAGJF,EAAAC,EAAAC,cAAA,aACG0B,EAAOhB,IAAI,SAAAzB,GAAM,OAChBa,EAAAC,EAAAC,cAAC6B,EAAD,CACEjB,IAAK3B,EAAOkB,GACZlB,OAAQA,EACRC,SAAUD,EAAOkB,KAAOkB,EACxBlC,WAAY,WACVmC,EAAKQ,SAAS,CAAET,iBAAkBpC,EAAOkB,mBAhC/B4B,IAAMC,WA+ChCb,EAAYD,aAAe,CACzBS,mBAAoB,cAGPR,QChDTc,SAAS,eAAAjD,EAAAkD,OAAAC,EAAA,EAAAD,CAAAE,EAAArC,EAAAsC,KAAG,SAAAC,IAAA,IAAAC,EAAAb,EAAA,OAAAU,EAAArC,EAAAyC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACJ,kBADIF,EAAAE,KAAA,EAEOC,MADX,mBADI,cAEVL,EAFUE,EAAAI,KAAAJ,EAAAE,KAAA,EAGKJ,EAASO,OAHd,cAGVpB,EAHUe,EAAAI,KAAAJ,EAAAM,OAAA,SAKTrB,GALS,wBAAAe,EAAAO,SAAAV,MAAH,yBAAAtD,EAAAiE,MAAA1B,KAAA2B,YAAA,IAQTC,EAAkB,SAAAzB,GAAM,OAAIA,EAC/BhB,IAAI,SAACzB,EAAQmE,GAAT,OAAAlB,OAAAmB,EAAA,EAAAnB,CAAA,GACAjD,EADA,CAEHkB,GAAIiD,EAAQ,EACZvD,IAAKZ,EAAOqB,KAAOrB,EAAOoB,KAC1BiD,QAASC,KAAKC,KAAKvE,EAAOqB,KAAO,KACjCG,SAAUiB,EACP+B,OACC,SAAA9C,GAAK,OAAIA,EAAMJ,SAAWtB,EAAOgC,MAC9BN,EAAMH,SAAWvB,EAAOgC,OAC3BP,IAAI,SAAAC,GAAK,OAAIA,EAAMM,WAExBP,IAAI,SAACzB,EAAQmE,EAAOM,GAcnB,OAbAzE,EAAOsB,OAASmD,EAAeC,KAC7B,SAAAC,GAAK,OAAIA,EAAM3C,OAAShC,EAAO4E,aAGjC5E,EAAOuB,OAASkD,EAAeC,KAC7B,SAAAG,GAAG,OAAIA,EAAI7C,OAAShC,EAAO8E,aAG7B9E,EAAOwB,SAAWiD,EAAeD,OAC/B,SAAA9C,GAAK,OAAIA,EAAMJ,SAAWtB,EAAOgC,MAC1BN,EAAMH,SAAWvB,EAAOgC,OAG1BhC,KAGL+E,EAAkB,SAACtC,EAAQuC,EAAWC,GAC1C,IAAMC,EAAkBD,EAAME,cAE9B,OAAO1C,EACJ+B,OAAO,SAAAxE,GAAM,OAAIA,EAAOgC,KAAKmD,cAAcC,SAASF,KACpDG,KAAK,SAACC,EAASC,GACd,IAAMC,EAASF,EAAQN,GACjBS,EAASF,EAAQP,GAEvB,cAAeQ,GACb,IAAK,SACH,OAAOA,EAAOE,aAAaD,GAE7B,IAAK,SACL,IAAK,UACH,OAAOD,EAASC,EAElB,QACE,OAAO,MAKXE,6MACJxD,MAAQ,CACNM,OAAQ,GACRmD,cAAe,GACfZ,UAAW,GACXC,MAAO,MAaTY,aAAe,SAACb,GACdc,EAAKjD,SAAS,SAAAhB,GAAA,IAAGoD,EAAHpD,EAAGoD,MAAOxC,EAAVZ,EAAUY,OAAV,MAAwB,CACpCuC,YACAY,cAAeb,EAAgBtC,EAAQuC,EAAWC,SAItDc,kBAAoB,SAACC,GACnB,IAAMf,EAAQe,EAAMC,OAAOC,MAE3BJ,EAAKjD,SAAS,SAAAsD,GAAA,IAAG1D,EAAH0D,EAAG1D,OAAQuC,EAAXmB,EAAWnB,UAAX,MAA4B,CACxCC,QACAW,cAAeb,EAAgBtC,EAAQuC,EAAWC,SAItDmB,UAAY,SAACpG,GACX8F,EAAKjD,SAAS,SAAAwD,GAAkC,IAA/B5D,EAA+B4D,EAA/B5D,OAAQuC,EAAuBqB,EAAvBrB,UAAWC,EAAYoB,EAAZpB,MAC5BqB,EAAY,GAAAjG,OAAA4C,OAAAsD,EAAA,EAAAtD,CAAOR,GAAP,CAAezC,IAC3BwG,EAAmBtC,EAAgBoC,GAEzC,MAAO,CACL7D,OAAQ+D,EACRZ,cAAeb,EAAgByB,EAAkBxB,EAAWC,0NAhC3CjC,WAAfP,SACA+D,EAAmBtC,EAAgBzB,GAEzCH,KAAKO,SAAS,CACZJ,OAAQ+D,EACRZ,cAAeY,uIAgCV,IAAAC,EACqCnE,KAAKH,MAAzCyD,EADDa,EACCb,cAAeZ,EADhByB,EACgBzB,UAAWC,EAD3BwB,EAC2BxB,MAElC,OACEpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UACG6E,EAAcc,OACd,yBACA1B,GAGHnE,EAAAC,EAAAC,cAAC4F,EAAD,CAAYC,SAAUtE,KAAK8D,YAE3BvF,EAAAC,EAAAC,cAAA,SACE8F,KAAK,OACLX,MAAOjB,EACP6B,SAAUxE,KAAKyD,oBAGjBlF,EAAAC,EAAAC,cAACgG,EAAD,CACEtE,OAAQmD,EACRlD,mBAAoBJ,KAAKuD,uBAnEjB/C,IAAMC,WA0ElBiE,6MACJC,aAAe,SAACjB,GACdA,EAAMkB,iBACN,IAAMC,EAAOnB,EAAMC,OAEnB5D,EAAKG,MAAMoE,SAAS,CAClB5E,KAAMmF,EAAKC,SAASpF,KAAKkE,MACzBzF,IAAK0G,EAAKC,SAAS3G,IAAIyF,MACvB5E,OAAQ6F,EAAKC,SAAS9F,OAAO4E,MAC7B3E,OAAQ4F,EAAKC,SAAS7F,OAAO2E,MAC7B9E,MAAO+F,EAAKC,SAAShG,KAAK8E,MAC1B7E,MAAO8F,EAAKC,SAAS/F,KAAK6E,iFAK5B,OACErF,EAAAC,EAAAC,cAAA,QAAM6F,SAAUtE,KAAK2E,cACnBpG,EAAAC,EAAAC,cAAA,SAAO8F,KAAK,OAAO7E,KAAK,SACxBnB,EAAAC,EAAAC,cAAA,SAAO8F,KAAK,OAAO7E,KAAK,QACxBnB,EAAAC,EAAAC,cAAA,SAAO8F,KAAK,OAAO7E,KAAK,WACxBnB,EAAAC,EAAAC,cAAA,SAAO8F,KAAK,OAAO7E,KAAK,WACxBnB,EAAAC,EAAAC,cAAA,SAAO8F,KAAK,OAAO7E,KAAK,SACxBnB,EAAAC,EAAAC,cAAA,SAAO8F,KAAK,OAAO7E,KAAK,SACxBnB,EAAAC,EAAAC,cAAA,UAAQ8F,KAAK,UAAb,eAxBiB/D,IAAMC,WAkChB4C,IC1Kf0B,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,CAAKC,KAAM,MAASC,SAASC,eAAe","file":"static/js/main.8ad151d3.chunk.js","sourcesContent":["import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Person = ({ person, selected, onSelected }) => {\n  const classes = classnames(\n    'Person',\n    `Person--lived-in-${person.century}`,\n    {\n      'Person--selected': selected,\n      'Person--man': person.sex === 'm',\n      'Person--womam': person.sex === 'f',\n      'Person--long-liver': person.age >= 65,\n    }\n  );\n\n  return (\n    <tr\n      className={classes}\n      onClick={onSelected}\n    >\n      <td>{person.id}</td>\n      <td>\n        <PersonName person={person} />\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.age}</td>\n      <td>{person.century}</td>\n      <td>\n        {person.mother ? (\n          <PersonName person={person.mother} />\n        ) : '-' }\n      </td>\n      <td>\n        {person.father ? (\n          <PersonName person={person.father} />\n        ) : '-' }\n      </td>\n      <td>\n        <ul>\n          {person.children.map(child => (\n            <li key={child.id}>\n              <PersonName person={child} />\n            </li>\n          ))}\n        </ul>\n      </td>\n    </tr>\n  );\n};\n\nconst PersonName = ({ person }) => {\n  const style = {\n    color: (person.sex === 'm') ? 'blue' : 'red',\n  };\n\n  return (\n    <b style={style}>\n      {person.name}\n    </b>\n  );\n};\n\nPersonName.propTypes = {\n  person: PropTypes.shape({\n    sex: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst PersonType = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number.isRequired,\n  age: PropTypes.number.isRequired,\n  century: PropTypes.number.isRequired,\n  father: PropTypes.object,\n  mother: PropTypes.object,\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nPerson.propTypes = {\n  person: PropTypes.shape(PersonType).isRequired,\n  selected: PropTypes.bool,\n  onSelected: PropTypes.func,\n};\n\nPerson.defaultProps = {\n  selected: false,\n  onSelected: () => {},\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nclass PeopleTable extends React.Component {\n  state = {\n    selectedPersonId: null,\n  };\n\n  render() {\n    const { people, onSortFieldChanged } = this.props;\n    const { selectedPersonId } = this.state;\n\n    return (\n      <table className=\"PeopleTable\" style={{ borderCollapse: 'colapse' }}>\n        <thead>\n          <tr>\n            <th onClick={() => onSortFieldChanged('id')}>ID</th>\n            <th onClick={() => onSortFieldChanged('name')}>Name</th>\n            <th onClick={() => onSortFieldChanged('sex')}>Sex</th>\n            <th onClick={() => onSortFieldChanged('born')}>Born</th>\n            <th onClick={() => onSortFieldChanged('died')}>Died</th>\n            <th onClick={() => onSortFieldChanged('age')}>Age</th>\n            <th onClick={() => onSortFieldChanged('century')}>Century</th>\n            <th>Mother</th>\n            <th>Father</th>\n            <th>Children</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <Person\n              key={person.id}\n              person={person}\n              selected={person.id === selectedPersonId}\n              onSelected={() => {\n                this.setState({ selectedPersonId: person.id });\n              }}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSortFieldChanged: PropTypes.func,\n};\n\nPeopleTable.defaultProps = {\n  onSortFieldChanged: () => {},\n};\n\nexport default PeopleTable;\n","/* eslint-disable no-param-reassign,react/no-unused-state */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport PeopleTable from './PeopleTable';\n\nimport './PeopleTable.scss';\n\nconst getPeople = async() => {\n  const url = 'api/people.json';\n  const response = await fetch(url);\n  const people = await response.json();\n\n  return people;\n};\n\nconst normalizePeople = people => people\n  .map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    cenrury: Math.ceil(person.died / 100),\n    children: people\n      .filter(\n        child => child.mother === person.name\n        || child.father === person.name\n      ).map(child => child.name),\n  }))\n  .map((person, index, preparedPeople) => {\n    person.mother = preparedPeople.find(\n      woman => woman.name === person.motherName\n    );\n\n    person.father = preparedPeople.find(\n      man => man.name === person.fatherName\n    );\n\n    person.children = preparedPeople.filter(\n      child => child.mother === person.name\n          || child.father === person.name\n    );\n\n    return person;\n  });\n\nconst getSortedPeople = (people, sortField, query) => {\n  const normalizedQuery = query.toLowerCase();\n\n  return people\n    .filter(person => person.name.toLowerCase().includes(normalizedQuery))\n    .sort((personA, personB) => {\n      const valueA = personA[sortField];\n      const valueB = personB[sortField];\n\n      switch (typeof valueA) {\n        case 'string':\n          return valueA.localCompare(valueB);\n\n        case 'number':\n        case 'boolean':\n          return valueA - valueB;\n\n        default:\n          return 0;\n      }\n    });\n};\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    sortField: '',\n    query: '',\n  };\n\n  async componentDidMount() {\n    const people = await getPeople();\n    const normalizedPeople = normalizePeople(people);\n\n    this.setState({\n      people: normalizedPeople,\n      visiblePeople: normalizedPeople,\n    });\n  }\n\n  setSortField = (sortField) => {\n    this.setState(({ query, people }) => ({\n      sortField,\n      visiblePeople: getSortedPeople(people, sortField, query),\n    }));\n  };\n\n  handleQueryChange = (event) => {\n    const query = event.target.value;\n\n    this.setState(({ people, sortField }) => ({\n      query,\n      visiblePeople: getSortedPeople(people, sortField, query),\n    }));\n  };\n\n  addPerson = (person) => {\n    this.setState(({ people, sortField, query }) => {\n      const copiedPeople = [...people, person];\n      const normalizedPeople = normalizePeople(copiedPeople);\n\n      return {\n        people: normalizedPeople,\n        visiblePeople: getSortedPeople(normalizedPeople, sortField, query),\n      };\n    });\n  };\n\n  render() {\n    const { visiblePeople, sortField, query } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {visiblePeople.length}\n          {' people are sorted by '}\n          {sortField}\n        </h1>\n\n        <PersonForm onSubmit={this.addPerson} />\n\n        <input\n          type=\"text\"\n          value={query}\n          onChange={this.handleQueryChange}\n        />\n\n        <PeopleTable\n          people={visiblePeople}\n          onSortFieldChanged={this.setSortField}\n        />\n      </div>\n    );\n  }\n}\n\nclass PersonForm extends React.Component {\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.target;\n\n    this.props.onSubmit({\n      name: form.elements.name.value,\n      sex: form.elements.sex.value,\n      mother: form.elements.mother.value,\n      father: form.elements.father.value,\n      born: +form.elements.born.value,\n      died: +form.elements.died.value,\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" name=\"name\" />\n        <input type=\"text\" name=\"sex\" />\n        <input type=\"text\" name=\"mother\" />\n        <input type=\"text\" name=\"father\" />\n        <input type=\"text\" name=\"born\" />\n        <input type=\"text\" name=\"died\" />\n        <button type=\"submit\">Add</button>\n      </form>\n    );\n  }\n}\n\nPersonForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}